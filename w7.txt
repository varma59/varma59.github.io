

1) Aim : Write a brief note on Python Matplotlib Library

Matplotlib is a comprehensive library for creating static, animated, and
interactive visualizations in Python. Matplotlib makes easy things easy
and hard things possible.

(1)Create publication quality plots.

(2)Make interactive figures that can zoom, pan, update.

(3)Customize visual style and layout.

(4)Export to many file formats.

(5)Embed in JupyterLab and Graphical User Interfaces.

(6)Use a rich array of third-party packages built on Matplotlib.

2) Aim : Demonstrate plotting a line between two specific points

    import matplotlib.pyplot as plt
    import numpy as np
    x = np.array([2,3])
    y = np.array([8,5])

    plt.plot(x,y,marker ='o')
    plt.show()

[]

3) Aim : Demonstrate plotting only the markers at two specific points

    import matplotlib.pyplot as plt
    import numpy as np
    x = np.array([2,3])
    y = np.array([8,5])

    plt.plot(x,y,'o')
    plt.show()

[]

4) Aim : Demonstrate plotting a line through multiple points and mark
each point as a ‘star’ and ‘diamond’

    import matplotlib.pyplot as plt
    import numpy as np
    x = np.array([1,2,3,4,5,6,7])
    y = np.array([1,2,3,4,5,6,7])


    plt.plot(x,y,marker = '*')
    plt.show()

[]

    plt.plot(x,marker = 'd')
    plt.show()

[]

5) Aim : Demonstrate plotting by considering default X-points

    import matplotlib.pyplot as plt
    import numpy as np

    y = np.array([1,2,1,3,1,4,1])


    plt.plot(y,marker = 'o')
    plt.show()

[]

6) Aim : Demonstrate plotting a dashed line through multiple points
using green color and linewidth of 15.5.

    import matplotlib.pyplot as plt
    import numpy as np
    x = np.array([1,2,3,4,5])
    y = np.array([1,3,4,5,6])


    plt.plot(x,y,linestyle = 'dashed', color ='g', linewidth = '15.5')
    plt.show()

[]

7) Aim : Demonstrate plotting three separate lines without using default
X-points

    import matplotlib.pyplot as plt
    import numpy as np
    y1 = np.array([1,2,3,4,5,6,7,8,9])
    y2 = np.array([9,8,7,6,5,4,3,2,1])
    y3 = np.array([2,1,3,1,4,1,5])


    plt.plot(y1)
    plt.plot(y2)
    plt.plot(y3)
    plt.show()

[]

8) Aim : Demonstrate using labels to show the relation between two numpy
arrays of Time taken and Distance covered. Also give a suitable title
for the plot.

    import matplotlib.pyplot as plt
    import numpy as np
    y= np.array([1,2,3,4,5,6,7,8,9])
    x = np.array([9,8,7,6,5,4,3,2,1])

    plt.plot(x,y)
    plt.title("speed")
    plt.xlabel("time taken")
    plt.ylabel("distance covered")
    plt.show()

[]

8) Aim : Demonstrate plotting using Scatter, Bar and Pie charts.

    import matplotlib.pyplot as plt
    import numpy as np

    x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])
    y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])

    plt.scatter(x, y)
    plt.show()

[]

    import matplotlib.pyplot as plt
    import numpy as np

    x = np.array(["A", "B", "C", "D"])
    y = np.array([3, 8, 1, 10])

    plt.bar(x,y)
    plt.show()

[]

    import matplotlib.pyplot as plt
    import numpy as np

    y = np.array([35, 25, 25, 15])

    plt.pie(y)
    plt.show()

[]

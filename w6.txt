

Week-6

1.AIM:To Create a dataframe of Employee details (Name, Height, Weight,
Age and salary) for 10 employees

    import pandas as pd  
    Employees = [['Satwik', 5.10, 65,20, 100000], 
                   ['Abishek', 6.0, 75,20, 200000], 
                   ['Keethan', 5.4, 80,20, 75000],
                   ['Hemanth', 5.4, 65,20, 70000], 
                   ['Uday', 5.7, 68,21, 95000],
                   ['Guna', 5.8, 64,21, 95000],
                   ['Harsha', 5.6, 60,19,99000],
                   ['Avinash',5.8,75,20,80000],
                   ['AmmiReddy',5.10,85,21,80000],
                   ['Abhishek',6.0,86,20,85000]]
    df = pd.DataFrame(Employees, columns=['Name','Height', 'Weight','Age', 'Salary'])
    print (df)

            Name  Height  Weight  Age  Salary
    0     Satwik     5.1      65   20  100000
    1    Abishek     6.0      75   20  200000
    2    Keethan     5.4      80   20   75000
    3    Hemanth     5.4      65   20   70000
    4       Uday     5.7      68   21   95000
    5       Guna     5.8      64   21   95000
    6     Harsha     5.6      60   19   99000
    7    Avinash     5.8      75   20   80000
    8  AmmiReddy     5.1      85   21   80000
    9   Abhishek     6.0      86   20   85000

2.AIM:Demonstrate row and column slicing with different ranges.

    df1 = df.loc[0:4]
    df2 = df.iloc[:,0:4:2]
    print(df1)
    print(df2)

          Name  Height  Weight  Age  Salary
    0   Satwik     5.1      65   20  100000
    1  Abishek     6.0      75   20  200000
    2  Keethan     5.4      80   20   75000
    3  Hemanth     5.4      65   20   70000
    4     Uday     5.7      68   21   95000
            Name  Weight
    0     Satwik      65
    1    Abishek      75
    2    Keethan      80
    3    Hemanth      65
    4       Uday      68
    5       Guna      64
    6     Harsha      60
    7    Avinash      75
    8  AmmiReddy      85
    9   Abhishek      86

3.AIM:Sort the dataframe by Height in ascending and descending order

    df.sort_values(by=['Height'])

            Name  Height  Weight  Age  Salary
    0     Satwik     5.1      65   20  100000
    8  AmmiReddy     5.1      85   21   80000
    2    Keethan     5.4      80   20   75000
    3    Hemanth     5.4      65   20   70000
    6     Harsha     5.6      60   19   99000
    4       Uday     5.7      68   21   95000
    5       Guna     5.8      64   21   95000
    7    Avinash     5.8      75   20   80000
    1    Abishek     6.0      75   20  200000
    9   Abhishek     6.0      86   20   85000

    df.sort_values(by=['Height'],ascending=False)

            Name  Height  Weight  Age  Salary
    1    Abishek     6.0      75   20  200000
    9   Abhishek     6.0      86   20   85000
    5       Guna     5.8      64   21   95000
    7    Avinash     5.8      75   20   80000
    4       Uday     5.7      68   21   95000
    6     Harsha     5.6      60   19   99000
    2    Keethan     5.4      80   20   75000
    3    Hemanth     5.4      65   20   70000
    0     Satwik     5.1      65   20  100000
    8  AmmiReddy     5.1      85   21   80000

4.AIM:Modify/Create a new dataframe with null entries and

(a) Check for missing values in the dataframe.

(b) Display total missing values in each column.

(c) Fill the missing values with 100.

(d) Drop all the missing data.

    import pandas as pd  
    import numpy as np
    Employees = [['Satwik', 5.10, 65,20, 100000], 
                   ['Abishek', 6.0, 75,20, 200000], 
                   ['Keethan', np.nan, 80,20, 75000],
                   [np.nan, 5.4, 65,20, 70000], 
                   ['Uday', np.nan, 68,21, 95000],
                   ['Guna', 5.8, 64,np.nan, 95000],
                   ['Harsha', 5.6, 60,np.nan,99000],
                   ['Avinash',5.8,np.nan,20,80000],
                   ['AmmiReddy',5.10,85,21,np.nan],
                   [np.nan,6.0,86,20,85000]]
    dn = pd.DataFrame(Employees, columns=['Name','Height', 'Weight','Age', 'Salary'])
    print (dn)

            Name  Height  Weight   Age    Salary
    0     Satwik     5.1    65.0  20.0  100000.0
    1    Abishek     6.0    75.0  20.0  200000.0
    2    Keethan     NaN    80.0  20.0   75000.0
    3        NaN     5.4    65.0  20.0   70000.0
    4       Uday     NaN    68.0  21.0   95000.0
    5       Guna     5.8    64.0   NaN   95000.0
    6     Harsha     5.6    60.0   NaN   99000.0
    7    Avinash     5.8     NaN  20.0   80000.0
    8  AmmiReddy     5.1    85.0  21.0       NaN
    9        NaN     6.0    86.0  20.0   85000.0

    dn.isnull()

        Name  Height  Weight    Age  Salary
    0  False   False   False  False   False
    1  False   False   False  False   False
    2  False    True   False  False   False
    3   True   False   False  False   False
    4  False    True   False  False   False
    5  False   False   False   True   False
    6  False   False   False   True   False
    7  False   False    True  False   False
    8  False   False   False  False    True
    9   True   False   False  False   False

    dn.isnull().sum()

    Name      2
    Height    2
    Weight    1
    Age       2
    Salary    1
    dtype: int64

    dn.fillna(100)

            Name  Height  Weight    Age    Salary
    0     Satwik     5.1    65.0   20.0  100000.0
    1    Abishek     6.0    75.0   20.0  200000.0
    2    Keethan   100.0    80.0   20.0   75000.0
    3        100     5.4    65.0   20.0   70000.0
    4       Uday   100.0    68.0   21.0   95000.0
    5       Guna     5.8    64.0  100.0   95000.0
    6     Harsha     5.6    60.0  100.0   99000.0
    7    Avinash     5.8   100.0   20.0   80000.0
    8  AmmiReddy     5.1    85.0   21.0     100.0
    9        100     6.0    86.0   20.0   85000.0

    dp= dn.dropna() 
    print (dp)

          Name  Height  Weight   Age    Salary
    0   Satwik     5.1    65.0  20.0  100000.0
    1  Abishek     6.0    75.0  20.0  200000.0

5.AIM:Create a Car dataset with attributes Cname, Cage, CBodyPrice,
CWheelPrice, CEnginePrice in Excel and save as .csv (for 20 cars)

    from google.colab import files
    uploaded = files.upload()
    import pandas as pd
    import io
    df = pd.read_csv(io.BytesIO(uploaded['car_demo.csv']))
    print(df)

    <IPython.core.display.HTML object>

    Saving car_demo.csv to car_demo (4).csv
        S.NO           CNAME  CAGE  CBODYPRICE  CWHEELPRICE  CENGINEPRICE
    0      1   Maruti Suzuki     7        9000         5000         35000
    1      2         Hyundai     8        9001         7000         37000
    2      3     Tata Motors     9        9002         4000         34000
    3      4             Kia     7        9003        10000        310000
    4      5        Mahindra     6        9004         5000         35000
    5      6          Toyota     5        9005         7000         37000
    6      7         Renault     4        9006         5200         35200
    7      8           Honda     8        9007         5000         35000
    8      9        MG Motor     9        9008        15000        315000
    9     10           Skoda    10        9009         8000         50000
    10    11           dzire     5        9010         7000         55507
    11    12           nexon     6        9011         5350         66607
    12    13          duster     7        9012         2220         77707
    13    14           creta     8        9013         4140         88807
    14    15            audi     5        9014          500         55507
    15    16            benz     4        9015           10         44407
    16    17           tesla     5        9016           20         55507
    17    18            ciaz     7        9017          100         77707
    18    19            nano     6        9018           60         66607
    19    20           swift     7        9019          100         77707

6.AIM:Load the dataset and find the total price of all the cars.

    df['TOTAL']=df['CBODYPRICE']+df['CWHEELPRICE']+df['CENGINEPRICE']
    print(df)

        S.NO           CNAME  CAGE  CBODYPRICE  CWHEELPRICE  CENGINEPRICE   TOTAL
    0      1   Maruti Suzuki     7        9000         5000         35000   49000
    1      2         Hyundai     8        9001         7000         37000   53001
    2      3     Tata Motors     9        9002         4000         34000   47002
    3      4             Kia     7        9003        10000        310000  329003
    4      5        Mahindra     6        9004         5000         35000   49004
    5      6          Toyota     5        9005         7000         37000   53005
    6      7         Renault     4        9006         5200         35200   49406
    7      8           Honda     8        9007         5000         35000   49007
    8      9        MG Motor     9        9008        15000        315000  339008
    9     10           Skoda    10        9009         8000         50000   67009
    10    11           dzire     5        9010         7000         55507   71517
    11    12           nexon     6        9011         5350         66607   80968
    12    13          duster     7        9012         2220         77707   88939
    13    14           creta     8        9013         4140         88807  101960
    14    15            audi     5        9014          500         55507   65021
    15    16            benz     4        9015           10         44407   53432
    16    17           tesla     5        9016           20         55507   64543
    17    18            ciaz     7        9017          100         77707   86824
    18    19            nano     6        9018           60         66607   75685
    19    20           swift     7        9019          100         77707   86826

7.AIM:Drop the duplicate Cage entries and print the dataframe.

    print(df.drop_duplicates("CAGE"))

       S.NO           CNAME  CAGE  CBODYPRICE  CWHEELPRICE  CENGINEPRICE  TOTAL
    0     1   Maruti Suzuki     7        9000         5000         35000  49000
    1     2         Hyundai     8        9001         7000         37000  53001
    2     3     Tata Motors     9        9002         4000         34000  47002
    4     5        Mahindra     6        9004         5000         35000  49004
    5     6          Toyota     5        9005         7000         37000  53005
    6     7         Renault     4        9006         5200         35200  49406
    9    10           Skoda    10        9009         8000         50000  67009

INFERENCE

1.  Choosing a new library to start off with is a very difficult
    decision to make. There is a lot of research involved and so many
    roads to take.
2.  Thus having a list of pros and cons about the library or the
    framework can be very helpful for one. It will not only help you to
    decide but also give you an idea of what exactly the framework is
    capable of and what expectations you can have from it.
3.  Therefore in this article, we bring you a list of advantages of
    Pandas – A Python library. Besides, we also cover the disadvantages
    of Pandas. Advantages:
4.  A DataFrame can be created from scratch, or you can use other data
    structures, like NumPy arrays.
5.  When you use pandas DataFrame, you can import data in various
    formats and from various sources.
6.  You can, for example, import NumPy arrays, alongside being able to
    import pandas content. Disavantages:
7.  A complex syntax which is not always in line with Python: When you
    are using Pandas, knowing it is a part of Python,
8.  some of its syntax can be complex. ...
9.  Learning curve: Pandas have a very steep learning curve.
10. Poor documentation:
11. Poor 3D matrix compatibility

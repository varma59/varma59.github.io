public class Student 
{
 private int roll;
 private String name;
 //constructor to initialize roll number and name of the student
 Student(int rollNo, String sName)
 { 
 roll = rollNo;
 name = sName;
 }
 //copy constructor
 Student(Student student)
 {
 System.out.println("\n---Copy Constructor Invoked---");
 roll = student.roll;
 name = student.name;
 }
 //method to return roll number
 int printRoll()
 {
 return roll;
 }
//Method to return name of the student
 String printName()
 {
 return name;
 }
 //class to create student object and print roll number and name of the student
 public static void main(String[] args)
 {
 Student student1 = new Student(101, "Sneha");
 System.out.println("Roll number of the first student: "+ student1.printRoll());
 System.out.println("Name of the first student: "+ student1.printName());
 //passing the parameter to the copy constructor
 Student student2 = new Student(student1);
 System.out.println("\nRoll number of the second student: "+ student2.printRoll());
 System.out.println("Name of the second student: "+ student2.printName());
 }
}
//polymorpisim
class Bank{ 
float getRateOfInterest(){return 0;} 
} 
class SBI extends Bank{ 
float getRateOfInterest(){return 8.4f;} 
} 
class ICICI extends Bank{ 
float getRateOfInterest(){return 7.3f;} 
} 
class AXIS extends Bank{ 
float getRateOfInterest(){return 9.7f;} 
} 
class TestPolymorphism{ 
public static void main(String args[]){ 
Bank b; 
b=new SBI(); 
System.out.println("SBI Rate of Interest: "+b.getRateOfInterest()); 
b=new ICICI(); 
System.out.println("ICICI Rate of Interest: "+b.getRateOfInterest()); 
b=new AXIS(); 
System.out.println("AXIS Rate of Interest: "+b.getRateOfInterest()); 
} 
}
//exceptions , try and catch.
ublic class MultipleCatchBlock1 {
public static void main(String[] args) {
 try{ 
 int a[]=new int[5]; 
 a[5]=30/0; 
 } 
 catch(ArithmeticException e)
 {
 System.out.println("Arithmetic Exception occurs");
 } 
 catch(ArrayIndexOutOfBoundsException e)
 {
 System.out.println("ArrayIndexOutOfBounds Exception occurs");
 } 
 catch(Exception e)
 {
 System.out.println("Parent Exception occurs");
 } 
 System.out.println("rest of the code"); 
}
}
//thread
class MyThread implements Runnable
{
    public void run()
    {
        System.out.println("concurrent thread started running..");
    }
}

class MyThreadDemo
{
    public static void main(String args[])
    {
        MyThread mt = new MyThread();
        Thread t = new Thread(mt);
        t.start();
    }
}
//AWT,frame with attributes like setSize(), setLayout(), setVisible() 
import java.awt.*; 
import java.awt.event.*; 
public class ButtonExample3 { 
public static void main(String[] args) { 
 // create instance of frame with the label 
 Frame f = new Frame("Button Example"); 
 final TextField tf=new TextField(); 
 tf.setBounds(50,50, 150,20); 
 // create instance of button with label 
 Button b=new Button("Click Here"); 
 // set the position for the button in frame 
 b.setBounds(50,100,60,30); 
 b.addActionListener(new ActionListener() { 
 public void actionPerformed (ActionEvent e) { 
 tf.setText("Welcome to Javatpoint."); 
 } 
 });
// adding button the frame 
 f.add(b); 
// adding textfield the frame 
 f.add(tf); 
// setting size, layout and visibility 
 f.setSize(400,400); 
 f.setLayout(null); 
 f.setVisible(true); 
} 
} 
//Print area
mport java.util.*;
abstract class shape
{
int a,b;
abstract public void printarea();
}
class rectangle extends shape
{
public int area_rect;
public void printarea()
{
 Scanner s=new Scanner(System.in);
 System.out.println("enter the length and breadth of rectangle");
 a=s.nextInt();
 b=s.nextInt();
 area_rect=a*b;
 System.out.println("Length of rectangle "+a +"breadth of rectangle "+b);
 System.out.println("The area ofrectangle is:"+area_rect);
}
}
class triangle extends shape
{
double area_tri;
public void printarea()
{
Scanner s=new Scanner(System.in);
System.out.println("enter the base and height of triangle");
a=s.nextInt();
b=s.nextInt();
System.out.println("Base of triangle "+a +"height of triangle "+b);
area_tri=(0.5*a*b);
System.out.println("The area of triangle is:"+area_tri);
}
}
class circle extends shape
{
double area_circle;
public void printarea()
{
Scanner s=new Scanner(System.in);
System.out.println("enter the radius of circle");
a=s.nextInt();
area_circle=(3.14*a*a);
System.out.println("Radius of circle"+a);
System.out.println("The area of circle is:"+area_circle);
}
}
public class shapeclass
{
public static void main(String[] args) 
{
rectangle r=new rectangle();
r.printarea();
triangle t=new triangle();
t.printarea();
circle r1=new circle();
r1.printarea();
}
}


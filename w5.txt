

WEEK-5

1. AIM : Write a brief note on Pandas Library

-   Pandas is a Python library used for working with data sets.

-   It has functions for analyzing, cleaning, exploring, and
    manipulating data.

-   The name "Pandas" has a reference to both "Panel Data", and "Python
    Data Analysis" and was created by Wes McKinney in 2008.

-   It has functions for analyzing, cleaning, exploring, and
    manipulating data.

-   The name "Pandas" has a reference to both "Panel Data", and "Python
    Data Analysis" and was created by Wes McKinney in 2008.

-   Pandas allows us to analyze big data and make conclusions based on
    statistical theories.

-   Pandas can clean messy data sets, and make them readable and
    relevant.

-   Relevant data is very important in data science.

2. AIM : Create a dictionary that contains name, age, gender, mobile
number, percentage of 10 students and (1) create a corresponding
Dataframe (2) locate the first row (3) Locate the first, second and
third row together. (4) Name the row indexes by Roll number.

    import pandas as pd
    data = {
        "Name":["Satwik","Abishek","Keetan","Hemanth","Uday","Guna","Harsha","Avinash","AmmiReddy","Abhishek"],
        "age":[20,20,20,20,21,20,19,20,21,20],
         "gender":["Male","Male","Male","Male","Male","Male","Male","Male","Male","Male"],
         "mobile number":[999501,999502,999503,999504,999507,999521,999517,999522,999542,999564],
         "percentage":[82,82,65,64,89,87,95,83,84,80]

    }
    df=pd.DataFrame(data,index=[501,502,503,504,507,521,517,522,542,564])
    print(df)
    print(df.loc[501])
    print(df.loc[[501,502,503]])

              Name  age gender  mobile number  percentage
    501     Satwik   20   Male         999501          82
    502    Abishek   20   Male         999502          82
    503     Keetan   20   Male         999503          65
    504    Hemanth   20   Male         999504          64
    507       Uday   21   Male         999507          89
    521       Guna   20   Male         999521          87
    517     Harsha   19   Male         999517          95
    522    Avinash   20   Male         999522          83
    542  AmmiReddy   21   Male         999542          84
    564   Abhishek   20   Male         999564          80
    Name             Satwik
    age                  20
    gender             Male
    mobile number    999501
    percentage           82
    Name: 501, dtype: object
            Name  age gender  mobile number  percentage
    501   Satwik   20   Male         999501          82
    502  Abishek   20   Male         999502          82
    503   Keetan   20   Male         999503          65

3. AIM : Create a series of data from

(1) range b/w (10, 50) with step difference 5.

(2) A list of all prime number up to 20 and also name the row indexes as
prime_1, prime_2, .... So on.

    import pandas as pd
    a = [10,15,20,25,30,35,40,45,50]
    myvar=pd.Series(a)
    print(myvar)
    b=[1,2,3,5,7,11,13,17,19]
    myva = pd.Series(b, index = ["prime1","prime2","prime3","prime4","prime5","prime6","prime7","prime8","prime9"])
    print(myva)

    0    10
    1    15
    2    20
    3    25
    4    30
    5    35
    6    40
    7    45
    8    50
    dtype: int64
    prime1     1
    prime2     2
    prime3     3
    prime4     5
    prime5     7
    prime6    11
    prime7    13
    prime8    17
    prime9    19
    dtype: int64

4. AIM : Demonstrate loading a dataset (.csv) from local drive and also
from an online repository.

    from google.colab import files
    uploaded = files.upload()
    import pandas as pd
    df = pd.read_csv('SECA.csv')
    print(df)
    url="https://people.sc.fsu.edu/~jburkardt/data/csv/addresses.csv"
    df1 = pd.read_csv(url)
    print(df1)

    <IPython.core.display.HTML object>

    Saving SECA.csv to SECA (4).csv
               Name  Reg.No  Age Subject Section
    0        Satwik     501   20      BI       A
    1       Abishek     502   20      BI       A
    2        Keetan     503   20      BI       A
    3       Hemanth     504   20      CN       A
    4          Uday     507   20      BI       A
    5         Rahul     512   20      CN       A
    6      Harinadh     513   20      CN       A
    7       Keertan     514   20      CN       A
    8        Bharat     515   20      CN       A
    9        Harsha     517   20      BI       A
    10      Bhaskar     518   20      BI       A
    11         Guna     521   20      BI       A
    12      Avinash     522   20      CN       A
    13        Akash     525   20      BI       A
    14     Yaswanth     527   20      BI       A
    15        Ashik     534   20      CN       A
    16      Sampath     536   20      CN       A
    17        Varun     537   20      CN       A
    18         Teja     540   20      CN       A
    19    AmmiReddy     542   20      CN       A
    20        Tarun     543   20      CN       A
    21   Partha Sai     545   20      CN       A
    22        Vinay     546   20      BI       A
    23        Datta     547   20      BI       A
    24       Likith     551   20      BI       A
    25  ManiBhaskar     553   20      CN       A
    26       Sanjay     556   20      CN       A
    27    RaviKiran     557   20      CN       A
    28        Mohan     560   20      BI       A
    29     Abhishek     564   20      BI       A
                        John       Doe                 120 jefferson st.  \
    0                   Jack  McGinnis                      220 hobo Av.   
    1          John "Da Man"    Repici                 120 Jefferson St.   
    2                Stephen     Tyler  7452 Terrace "At the Plaza" road   
    3                    NaN  Blankman                               NaN   
    4  Joan "the bone", Anne       Jet               9th, at Terrace plc   

         Riverside   NJ   08075  
    0        Phila   PA    9119  
    1    Riverside   NJ    8075  
    2     SomeTown   SD   91234  
    3     SomeTown   SD     298  
    4  Desert City   CO     123  

5. AIM : Demonstrate adding column names to a dataset.


    import pandas as pd
    data = {
    "l1" :["Amar", "Barsha", "Carlos", "Tanmay", "Misbah"],
    "l2" :["Alpha", "Bravo", "Charlie", "Tango", "Mike"],
    "l3" : [23, 25, 22, 27, 29],
    "l4" :[69, 54, 73, 70, 74]
    }
    df = pd.DataFrame(data)
    print(df)

    print("\n")
    df.columns =['Name', 'Code', 'Age', 'Weight']
      

    print(df)

6. AIM : Access the head, tail, first 7 rows and last 7 rows of the iris
dataset

    import pandas as pd

    df1 = pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data")

    print(df1.head())
    print(df1.tail())
    print(df1.head(7))
    print(df1.tail(7))

       5.1  3.5  1.4  0.2  Iris-setosa
    0  4.9  3.0  1.4  0.2  Iris-setosa
    1  4.7  3.2  1.3  0.2  Iris-setosa
    2  4.6  3.1  1.5  0.2  Iris-setosa
    3  5.0  3.6  1.4  0.2  Iris-setosa
    4  5.4  3.9  1.7  0.4  Iris-setosa
         5.1  3.5  1.4  0.2     Iris-setosa
    144  6.7  3.0  5.2  2.3  Iris-virginica
    145  6.3  2.5  5.0  1.9  Iris-virginica
    146  6.5  3.0  5.2  2.0  Iris-virginica
    147  6.2  3.4  5.4  2.3  Iris-virginica
    148  5.9  3.0  5.1  1.8  Iris-virginica
       5.1  3.5  1.4  0.2  Iris-setosa
    0  4.9  3.0  1.4  0.2  Iris-setosa
    1  4.7  3.2  1.3  0.2  Iris-setosa
    2  4.6  3.1  1.5  0.2  Iris-setosa
    3  5.0  3.6  1.4  0.2  Iris-setosa
    4  5.4  3.9  1.7  0.4  Iris-setosa
    5  4.6  3.4  1.4  0.3  Iris-setosa
    6  5.0  3.4  1.5  0.2  Iris-setosa
         5.1  3.5  1.4  0.2     Iris-setosa
    142  6.8  3.2  5.9  2.3  Iris-virginica
    143  6.7  3.3  5.7  2.5  Iris-virginica
    144  6.7  3.0  5.2  2.3  Iris-virginica
    145  6.3  2.5  5.0  1.9  Iris-virginica
    146  6.5  3.0  5.2  2.0  Iris-virginica
    147  6.2  3.4  5.4  2.3  Iris-virginica
    148  5.9  3.0  5.1  1.8  Iris-virginica

7. AIM : Demonstrate accessing (1) particular columns (2) columns with
selective top rows and bottom rows from the iris dataset.

    import pandas as pd
    df = pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data")
    print(df[["5.1","3.5"]])
    print(df["5.1"].head(7))
    print(df["5.1"].tail(7))

INFERENCE :

1.WORKING :

-   Pandas is that it takes data and creates a Python object with rows
    and columns called data frame that looks very similar to table in a
    statistical software .

-   DataFrame is the most important and widely used data structure and
    is a standard way to store data.

-   DataFrame has data aligned in rows and columns like the SQL table or
    a spreadsheet database. We can either hard code data into a
    DataFrame or import a CSV file, tsv file, Excel file, SQL table,
    etc.

-   There are many ways to create a DataFrame. We can create DataFrame
    object from Dictionaries or list of dictionaries.

2.ADVANTAGES :

-   Excellent representation of data
-   Less coding done, more work accomplished
-   Efficient handling of huge data
-   The flexibility of data and easy customization
-   An extensive set of features

3. DISADVANTAGES

-   A complex syntax which is not always in line with Python Learning
    curve
-   Poor 3D matrix compatibility
-   Bad documentation

4.APPLICATIONS :

-   Stock Prediction.

-   Advertising.

-   Statistical analysis.

-   Natural Language Processing (NLP)

-   Analytics

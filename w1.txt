

Week-1

1) AIM: Create a list of 5 elements. pass the list to a function and
compute the average of 5 elements.

    def avg(list):
     avg=sum(list)/5
     return avg
    list=[1,9,2,7,6]
    print(avg(list))

    5.0

2) AIM: Write a program that prompts a user to enter element of a list
and add the elements to a list. Write a function maxim(list) and
minum(list) to find out the maximum and minimum values from list.

    list=[]
    n=int(input())
    for i in range(n):
      m=int(input())
      list.append(m)
    print(list)
    def maximum(list):
      a=max(list)
      return a
    def minimum(list):
      b=min(list)
      return b
    print(maximum(list))
    print(minimum(list))

3) AIM: Write a function reverse(list) to reverse the elements of the
list

    def reverse(b):
      b.reverse()
      return b
    b=[1,7,3]
    print(reverse(b))

4) AIM: Write a program to return prime numbers from a list.

    l=[int(i) for i in input().split()]
    c=0
    for i in l:
      for j in range(2,i):
        if(i%j==0):
          c=c+1
      if(c==0):
          print(i)

INFERENCE: In Python, you'll be able to use a list function that creates
a group that will be manipulated for your analysis. This collection of
data is named a list object. While all methods are functions in Python,
not all functions are methods. There's a key difference between
functions and methods in Python.

Advantages: List comprehensions are used for creating lists from the
iterative process. List comprehensions are easy to understand/ implement
and makes code elegant. List comprehensions are compact and
user-friendly .

Disadvantages: The list has the limitation that one can only append at
the end. But, in real life, there are situations that a developer has to
add items at the starting of the existing list which becomes difficult
in the list.

Applications: Used in JSON format Useful for Array operations Used in
Databases
